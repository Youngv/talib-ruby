h2. talib-ruby

Ruby Wrapper for "ta-lib":http://ta-lib.org/

This project has been started by Timur Adigamov on "Rubyforge":http://rubyforge.org/projects/talib-ruby/,
but since it didn't build on my machine and wasn't complete i modified it slightly, et voila.

h3. Install and build instructions

h4. Install ta-lib:

Install ta-lib from "MacPorts":http://www.macports.org/ports.php?by=name&substr=ta-lib:

bc. sudo port install ta-lib

Or install ta-lib from "Homebrew":https://github.com/mxcl/homebrew/blob/master/Library/Formula/ta-lib.rb:

bc. sudo brew install ta-lib

If you want to compile ta-lib from the sources ("ta-lib.org":http://www.ta-lib.org/hdr_dw.html) you have to use the following statements (thanks to rmldj):

bc. ./configure LDFLAGS="-lm"
make
sudo make install

h4. Install the ruby wrapper talib_ruby:

bc. sudo env ARCHFLAGS="-arch PLATFORM" gem install talib_ruby -- --with-talib-include=ABSOLUTE_PATH_TO_TALIB_HEADERS  --with-talib-lib=ABSOLUTE_PATH_TO_TALIB_LIBS

* PLATFORM = [i386 | x86_64 | ...]
* ABSOLUTE_PATH_TO_TALIB_HEADERS = The path to the ta-lib header files
** e.g. for Port: /opt/local/var/macports/software/ta-lib/0.4.0_0/opt/local/include
** e.g. for Homebrew: /usr/local/Cellar/ta-lib/0.4.0/include
* ABSOLUTE_PATH_TO_TALIB_LIBS = The path to the ta-lib lib files
** e.g. fo Port: /opt/local/var/macports/software/ta-lib/0.4.0_0/opt/local/lib
** e.g. fo Homebrew: /usr/local/Cellar/ta-lib/0.4.0/lib

Now ta-lib can be used by using _require 'talib_ruby'_
Needs at least Mac OSX 10.5. Has not been tested on Windows, but works there too what i've heard.
Tested with Ruby 1.8.7, 1.9.3 and 2.0.0.

h3. Example

Calculation of Moving Average (MA):

bc.. require 'rubygems'
require 'talib_ruby'

# init input data
a = Array.new
10.times { |i| a.push i.to_f }

10.times do |k|
    b = Array.new(10)
    l = TaLib::Function.new("MA")
    # setup input parameter
    l.in_real(0,a)
    # setup optional parameter
    l.opt_int(0,k+2)
    # setup output parameter
    l.out_real(0,b)
    lookback = l.lookback
    l.call(0,9)
    p "k=#{k+2}"
    p b
end

h3. Useful links

* "TA-Lib Forum":http://www.tadoc.org/forum/index.php?board=9.0
* "XML explanation":http://ta-lib.svn.sourceforge.net/viewvc/ta-lib/trunk/ta-lib/ta_func_api.xml?view=markup of all supported Functions
* "C/C++ API Documentation":http://ta-lib.org/d_api/d_api.html

h3. Donate

If you think this library is useful i would be grateful for a donation.
!https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif!:https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=NCX9EKVWBTBBJ

h3. License

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Copyright (c) 2013 by Valentin Treu, released under the MIT license.